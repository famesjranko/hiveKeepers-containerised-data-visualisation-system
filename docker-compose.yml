# HiveKeepers - project - docker-compose.yaml
# written by: Andrew McDonald
# initial: 27/01/22
# current: 06/03/22
# version: 0.82

version: '3.3'

# build containers
services:
  container1:
    build:
      context: container1
      dockerfile: Dockerfile
    container_name: 'reverse-proxy'
    volumes:
      - '${PWD}/container1/nginx/templates:/etc/nginx/templates:ro'
      # nginx basic_auth cred file - need to create with 'sudo htpasswd -c container1/nginx/auth/.htpasswd USERNAME
      - '${PWD}/container1/nginx/auth/.htpasswd:/etc/nginx/auth/.htpasswd:ro'
    environment:
      # GUNICORN_PORT must match in both containers
      - GUNICORN_PORT=8050
    #restart: "unless-stopped"
    networks:
      container_net:
        ipv4_address: 172.75.0.2
    cap_add:
      - CAP_NET_ADMIN
      - CAP_NET_RAW
    ports:
      - '80:80'
      #- '443:443'

  container2:
    build:
      context: container2
      dockerfile: Dockerfile
    container_name: 'dash-app'
    user: 1000:1000
    environment:
      #- GUNICORN_UID=1000
      #- GUNICORN_GID=1000
      - GUNICORN_NAME="HiveKeepers"
      - GUNICORN_WORKERS=2
      # GUNICORN_PORT must match in both containers
      - GUNICORN_PORT=8050
      - GUNICORN_LOG_LEVEL="info"
    volumes:
      # [ NEED TO ATTACH STORAGE FOR OFFLINE CACHING OF TIMESERIES DATA    ]
      # [ TIMESERIES DATA WILL BE STORED IN PYTHON SHELVE OR SQLITE DB FILE ]
      # dash app files
      - '${PWD}/container2/dash_app/hivekeepers_app.py:/home/hivekeeper/dash_app/app.py:ro'
      - '${PWD}/container2/dash_app/requirements.txt:/home/hivekeeper/dash_app/requirements.txt:ro'
      - '${PWD}/container2/dash_app/data.csv:/home/hivekeeper/dash_app/data.csv:ro'
      - '${PWD}/container2/dash_app/hivekeepers_helpers.py:/home/hivekeeper/dash_app/hivekeepers_helpers.py:ro'
      #- '${PWD}/container2/dash_app/hivekeepers.db:/dash_app/hivekeepers.db'
      - '${PWD}/container2/dash_app/update_db.py:/home/hivekeeper/dash_app/update_db.py'
    networks:
      container_net:
        ipv4_address: 172.75.0.3
    mem_limit: 6000m
    #restart: "unless-stopped"

# build container network to control access to containers
networks:
    container_net:
      name: container_net
      driver: bridge
      ipam:
        driver: default
        config:
          - subnet: 172.75.0.0/16
